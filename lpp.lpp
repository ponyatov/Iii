%{
#include "hpp.hpp"
string LexString;
%}
%option noyywrap yylineno
%x str

N	[0-9]+
%%
#[^\n]*			{}						// line comment

'				{ BEGIN(str); LexString=""; }
<str>'			{ BEGIN(INITIAL); yylval.o = new Str(LexString); return STR; }
<str>.			{ LexString += yytext; }

{N}				TOC(Num,NUM)			// numbers

\=				TOC(Op,EQ)				// operators
\+				TOC(Op,ADD)			
\-				TOC(Op,SUB)			
\*				TOC(Op,MUL)
\/				TOC(Op,DIV)			

\[				TOC(Op,LQ)				// brackets
\]				TOC(Op,RQ)
\(				TOC(Op,LP)			
\)				TOC(Op,RP)			
			

[a-zA-Z0-9_.]+	TOC(Sym,SYM)			// symbol

[ \t\r\n]+		{}						// drop spaces
.				{yyerror("lexer");}		// undetected char
%%
